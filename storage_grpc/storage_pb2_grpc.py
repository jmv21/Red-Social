# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import storage_grpc.storage_pb2 as storage__pb2


class StorageServicerStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Alive = channel.unary_unary(
                '/routeguide.StorageServicer/Alive',
                request_serializer=storage__pb2.FeatureS.SerializeToString,
                response_deserializer=storage__pb2.FeatureS.FromString,
                )
        self.Update_list = channel.unary_unary(
                '/routeguide.StorageServicer/Update_list',
                request_serializer=storage__pb2.Address_listS.SerializeToString,
                response_deserializer=storage__pb2.FeatureS.FromString,
                )
        self.Ask_for_file = channel.unary_stream(
                '/routeguide.StorageServicer/Ask_for_file',
                request_serializer=storage__pb2.FeatureS.SerializeToString,
                response_deserializer=storage__pb2.DataS.FromString,
                )


class StorageServicerServicer(object):
    """Interface exported by the server.
    """

    def Alive(self, request, context):
        """Basic message to recognize if there is a steady connection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ask_for_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServicerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Alive': grpc.unary_unary_rpc_method_handler(
                    servicer.Alive,
                    request_deserializer=storage__pb2.FeatureS.FromString,
                    response_serializer=storage__pb2.FeatureS.SerializeToString,
            ),
            'Update_list': grpc.unary_unary_rpc_method_handler(
                    servicer.Update_list,
                    request_deserializer=storage__pb2.Address_listS.FromString,
                    response_serializer=storage__pb2.FeatureS.SerializeToString,
            ),
            'Ask_for_file': grpc.unary_stream_rpc_method_handler(
                    servicer.Ask_for_file,
                    request_deserializer=storage__pb2.FeatureS.FromString,
                    response_serializer=storage__pb2.DataS.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'routeguide.StorageServicer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StorageServicer(object):
    """Interface exported by the server.
    """

    @staticmethod
    def Alive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.StorageServicer/Alive',
            storage__pb2.FeatureS.SerializeToString,
            storage__pb2.FeatureS.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.StorageServicer/Update_list',
            storage__pb2.Address_listS.SerializeToString,
            storage__pb2.FeatureS.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ask_for_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/routeguide.StorageServicer/Ask_for_file',
            storage__pb2.FeatureS.SerializeToString,
            storage__pb2.DataS.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
